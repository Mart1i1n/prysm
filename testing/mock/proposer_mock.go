// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/prysmaticlabs/prysm/v4/beacon-chain/rpc/core (interfaces: Proposer)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core "github.com/prysmaticlabs/prysm/v4/beacon-chain/rpc/core"
	eth "github.com/prysmaticlabs/prysm/v4/proto/prysm/v1alpha1"
)

// MockProposer is a mock of Proposer interface.
type MockProposer struct {
	ctrl     *gomock.Controller
	recorder *MockProposerMockRecorder
}

// MockProposerMockRecorder is the mock recorder for MockProposer.
type MockProposerMockRecorder struct {
	mock *MockProposer
}

// NewMockProposer creates a new mock instance.
func NewMockProposer(ctrl *gomock.Controller) *MockProposer {
	mock := &MockProposer{ctrl: ctrl}
	mock.recorder = &MockProposerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProposer) EXPECT() *MockProposerMockRecorder {
	return m.recorder
}

// ProposeBeaconBlock mocks base method.
func (m *MockProposer) ProposeBeaconBlock(arg0 context.Context, arg1 *eth.GenericSignedBeaconBlock) ([]byte, *core.RpcError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProposeBeaconBlock", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(*core.RpcError)
	return ret0, ret1
}

// ProposeBeaconBlock indicates an expected call of ProposeBeaconBlock.
func (mr *MockProposerMockRecorder) ProposeBeaconBlock(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProposeBeaconBlock", reflect.TypeOf((*MockProposer)(nil).ProposeBeaconBlock), arg0, arg1)
}
